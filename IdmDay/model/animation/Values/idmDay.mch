
/*
 * This file was generated by Meeduse on Monday, May 10, 2021 at 11:19:31 AM CEST
 */


MACHINE 
	
	idmDay

SETS
	
	SECTION;
	TRAIN

CONSTANTS
	
	SECTION1,
	SECTION2,
	SECTION3,
	SECTION4,
	SECTION5,
	TRAIN1,
	TRAIN2

PROPERTIES
	
	SECTION1 : SECTION &
	SECTION2 : SECTION &
	SECTION3 : SECTION &
	SECTION4 : SECTION &
	SECTION5 : SECTION &
	TRAIN1 : TRAIN &
	TRAIN2 : TRAIN &
	card({SECTION1,SECTION2,SECTION3,SECTION4,SECTION5}) = 5 &
	card(SECTION) >= 5 &
	card({TRAIN1,TRAIN2}) = 2 &
	card(TRAIN) >= 2

ABSTRACT_VARIABLES
	
	Section,
	Train,
	next,
	position

INVARIANT
	
	Section : FIN(SECTION) &
	Train : FIN(TRAIN) &
	next : Section >->> Section &
	position : Train --> Section

INITIALISATION
	
	Section := {SECTION1,SECTION2,SECTION3,SECTION4,SECTION5} ||
	Train := {TRAIN1,TRAIN2} ||
	position := {(TRAIN1 |-> SECTION2),(TRAIN2 |-> SECTION4)} ||
	next := {(SECTION1 |-> SECTION2),(SECTION2 |-> SECTION3),(SECTION3 |-> SECTION4),(SECTION4 |-> SECTION5),(SECTION5 |-> SECTION1)}

OPERATIONS
	
	Section_NEW(aSection,aNext,aPrevious) = 
	PRE	aSection : SECTION &
		aNext : Section &
		aPrevious : Section &
		aSection /: Section &
		next~[{aNext}] = {} &
		next[{aPrevious}] = {}
		
	THEN 
		Section := Section \/ {aSection} ||
		next := (next \/ {(aPrevious |-> aSection)}) \/ {(aSection |-> aNext)}
	END;

	Train_NEW(aTrain,aSection) = 
	PRE	aTrain : TRAIN &
		aSection : Section &
		aTrain /: Train
		
	THEN 
		Train := Train \/ {aTrain} ||
		position := position \/ {(aTrain |-> aSection)}
	END;

	Section_Free(aSection) = 
	PRE	aSection : Section &
		next[{aSection}] = {} &
		position~[{aSection}] = {} &
		next~[{aSection}] = {}
		
	THEN 
		Section := Section - {aSection} ||
		next := {aSection} <<| (next |>> {aSection}) ||
		position := position |>> {aSection}
	END;

	Train_Free(aTrain) = 
	PRE	aTrain : Train
		
	THEN 
		Train := Train - {aTrain} ||
		position := {aTrain} <<| position
	END;

	result <-- Section_GetNext(aSection) = 
	PRE	aSection : Section &
		aSection : dom(next)
		
	THEN 
		result := next(aSection)
	END;

	result <-- Section_GetPosition(aSection) = 
	PRE	aSection : Section &
		aSection : ran(position)
		
	THEN 
		result := position~[{aSection}]
	END;

	result <-- Train_GetSection(aTrain) = 
	PRE	aTrain : Train &
		aTrain : dom(position)
		
	THEN 
		result := position(aTrain)
	END;

	Section_SetNext(aSection,aNext) = 
	PRE	aSection : Section &
		aNext : Section &
		{(aSection |-> aNext)} /<: next &
		next[{aSection}] = {} &
		next~[{aNext}] = {}
		
	THEN 
		next := ({aSection} <<| next) \/ {(aSection |-> aNext)}
	END;

	Section_SetPosition(aSection,thePosition) = 
	PRE	aSection : Section &
		thePosition : FIN(Train) &
		(thePosition * {aSection}) /<: position &
		position~[{aSection}] = {} &
		!added.( added : thePosition => position[{added}] = {})
		
	THEN 
		position := (position |>> {aSection}) \/ (thePosition * {aSection})
	END;

	Train_SetSection(aTrain,aSection) = 
	PRE	aTrain : Train &
		aSection : Section &
		{(aTrain |-> aSection)} /<: position
		
	THEN 
		position := ({aTrain} <<| position) \/ {(aTrain |-> aSection)}
	END;

	Section_UnsetPosition(aSection) = 
	PRE	aSection : Section &
		position~[{aSection}] = {}
		
	THEN 
		position := position |>> {aSection}
	END;

	Section_AddPosition(aSection,aPosition) = 
	PRE	aSection : Section &
		aPosition : Train &
		(aPosition |-> aSection) /: position &
		position[{aPosition}] = {}
		
	THEN 
		position := position \/ {(aPosition |-> aSection)}
	END;

	Section_RemovePosition(aSection,aPosition) = 
	PRE	aSection : Section &
		aPosition : Train &
		(aPosition |-> aSection) : position &
		card(position[{aPosition}]) >= 2
		
	THEN 
		position := position - {(aPosition |-> aSection)}
	END


END
