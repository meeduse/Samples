
/*
 * This file was generated by Meeduse on Thursday, April 6, 2023 at 9:53:29 AM CEST
 */


MACHINE 
	
	extractedMM

DEFINITIONS
	


	END_OF_GENERATED_DEFINITIONS_FOR == extractedMM;
	
	/*
	 * Start of user code DEFINITIONS (NOT GENERATED)
	 */
	
	/*
	 * End of user code
	 */
	
	

SETS
	
	SectionVacancyTypes = {E_occupied,E_vacant,E_ambigious,E_unknown};
	POSITIONINGNETELEMENT;
	POSITIONEDRELATION;
	ASSOCIATEDNETELEMENT;
	AREALOCATION;
	TVPSECTION;
	TDSSECTION;
	TDSCOMPNENT;
	ETCSROUTE;
	ROUTEBODYPROPERTY;
	DOCUMENTROOT;
	DATAPREPENTITIES;
	ASSETANDSTATE;
	RSMENTITIES;
	TOPOLOGY

CONSTANTS
	
	PositioningNetElement,
	PositionedRelation,
	AssociatedNetElement,
	AreaLocation,
	TvpSection,
	TdsSection,
	TdsCompnent,
	EtcsRoute,
	DocumentRoot,
	DataPrepEntities,
	RsmEntities,
	LinearElement,
	VssLimit,
	VirtualSubSection,
	SectionList,
	SectionAndVacancy,
	ElementARelation,
	ElementBRelation,
	ToNetElement,
	AreaAssociatedNetElements,
	TvpSectionLocation,
	ApplyTdsToTvp,
	LimitsTdsSection,
	HasSection,
	VacancyToTds

PROPERTIES
	
	PositioningNetElement : FIN(POSITIONINGNETELEMENT) &
	PositionedRelation : FIN(POSITIONEDRELATION) &
	AssociatedNetElement : FIN(ASSOCIATEDNETELEMENT) &
	AreaLocation : FIN(AREALOCATION) &
	TvpSection : FIN(TVPSECTION) &
	TdsSection : FIN(TDSSECTION) &
	TdsCompnent : FIN(TDSCOMPNENT) &
	EtcsRoute : FIN(ETCSROUTE) &
	DocumentRoot : FIN(DOCUMENTROOT) &
	DataPrepEntities : FIN(DATAPREPENTITIES) &
	RsmEntities : FIN(RSMENTITIES) &
	LinearElement <: PositioningNetElement &
	VssLimit <: TdsCompnent &
	VirtualSubSection <: TdsSection &
	SectionList <: ROUTEBODYPROPERTY &
	SectionAndVacancy <: ASSETANDSTATE &
	ElementARelation : PositionedRelation --> PositioningNetElement &
	ElementBRelation : PositionedRelation --> PositioningNetElement &
	ToNetElement : AssociatedNetElement --> PositioningNetElement &
	AreaAssociatedNetElements : AssociatedNetElement +-> AreaLocation &
	TvpSectionLocation : TvpSection --> AreaLocation &
	ApplyTdsToTvp : TdsSection --> TvpSection &
	LimitsTdsSection : TdsCompnent <-> TdsSection &
	HasSection : SectionList <-> TvpSection &
	VacancyToTds : SectionAndVacancy >->> TdsSection

ABSTRACT_VARIABLES
	
	RouteBodyProperty,
	AssetAndState,
	Topology,
	A_ownsRouteBodyProperty_dataPrepEntities,
	A_KnowsAssetAndState_dataPrepEntities,
	A_dataPrepEntities_documentRoot,
	A_usesPositionedRelation_topology,
	A_usesNetElement_topology,
	EtcsTopologies,
	A_rsmEntities_documentRoot,
	inVacancyState

INVARIANT
	
	/*
	 * Start of user code INVARIANT (NOT GENERATED)
	 */
	
	/*
	 * End of user code
	 */
	
	
	RouteBodyProperty : FIN(ROUTEBODYPROPERTY) &
	AssetAndState : FIN(ASSETANDSTATE) &
	Topology : FIN(TOPOLOGY) &
	A_ownsRouteBodyProperty_dataPrepEntities : RouteBodyProperty +-> DataPrepEntities &
	A_KnowsAssetAndState_dataPrepEntities : AssetAndState +-> DataPrepEntities &
	A_dataPrepEntities_documentRoot : DataPrepEntities +-> DocumentRoot &
	A_usesPositionedRelation_topology : PositionedRelation +-> Topology &
	A_usesNetElement_topology : PositioningNetElement +-> Topology &
	EtcsTopologies : RsmEntities >+> Topology &
	A_rsmEntities_documentRoot : RsmEntities +-> DocumentRoot &
	inVacancyState : SectionAndVacancy +-> SectionVacancyTypes &
	dom(HasSection)=SectionList &
	SectionList <: RouteBodyProperty &
	SectionAndVacancy <: AssetAndState

INITIALISATION
	
	RouteBodyProperty := {} ||
	AssetAndState := {} ||
	Topology := {} ||
	A_ownsRouteBodyProperty_dataPrepEntities := {} ||
	A_KnowsAssetAndState_dataPrepEntities := {} ||
	A_dataPrepEntities_documentRoot := {} ||
	A_usesPositionedRelation_topology := {} ||
	A_usesNetElement_topology := {} ||
	EtcsTopologies := {} ||
	A_rsmEntities_documentRoot := {} ||
	inVacancyState := {}

OPERATIONS
	
	/*
	 * Start of user code OPERATIONS (NOT GENERATED)
	 */
	
	/*
	 * End of user code
	 */
	
	
	Topology_NEW(aTopology) = 
	PRE	aTopology : TOPOLOGY &
		aTopology /: Topology
		
	THEN 
		Topology := Topology \/ {aTopology}
	END;

	Topology_Free(aTopology) = 
	PRE	aTopology : Topology
		
	THEN 
		Topology := Topology - {aTopology} ||
		A_usesPositionedRelation_topology := A_usesPositionedRelation_topology |>> {aTopology} ||
		A_usesNetElement_topology := A_usesNetElement_topology |>> {aTopology} ||
		EtcsTopologies := EtcsTopologies |>> {aTopology}
	END;

	result <-- GetElementA(aPositionedRelation) = 
	PRE	aPositionedRelation : PositionedRelation &
		aPositionedRelation : dom(ElementARelation)
		
	THEN 
		result := ElementARelation(aPositionedRelation)
	END;

	result <-- GetElementB(aPositionedRelation) = 
	PRE	aPositionedRelation : PositionedRelation &
		aPositionedRelation : dom(ElementBRelation)
		
	THEN 
		result := ElementBRelation(aPositionedRelation)
	END;

	result <-- GetNetElement(aAssociatedNetElement) = 
	PRE	aAssociatedNetElement : AssociatedNetElement &
		aAssociatedNetElement : dom(ToNetElement)
		
	THEN 
		result := ToNetElement(aAssociatedNetElement)
	END;

	result <-- GetAssociatedNetElements(aAreaLocation) = 
	PRE	aAreaLocation : AreaLocation &
		aAreaLocation : ran(AreaAssociatedNetElements)
		
	THEN 
		result := AreaAssociatedNetElements~[{aAreaLocation}]
	END;

	result <-- GetIsLocatedAt(aTvpSection) = 
	PRE	aTvpSection : TvpSection &
		aTvpSection : dom(TvpSectionLocation)
		
	THEN 
		result := TvpSectionLocation(aTvpSection)
	END;

	result <-- GetAppliesToTvpsection(aTdsSection) = 
	PRE	aTdsSection : TdsSection &
		aTdsSection : dom(ApplyTdsToTvp)
		
	THEN 
		result := ApplyTdsToTvp(aTdsSection)
	END;

	result <-- GetLimitsTdsSection(aTdsCompnent) = 
	PRE	aTdsCompnent : TdsCompnent &
		aTdsCompnent : dom(LimitsTdsSection)
		
	THEN 
		result := LimitsTdsSection[{aTdsCompnent}]
	END;

	result <-- GetHasSection(aSectionList) = 
	PRE	aSectionList : SectionList &
		aSectionList : dom(HasSection)
		
	THEN 
		result := HasSection[{aSectionList}]
	END;

	result <-- GetDataPrepEntities(aDocumentRoot) = 
	PRE	aDocumentRoot : DocumentRoot &
		aDocumentRoot : ran(A_dataPrepEntities_documentRoot)
		
	THEN 
		result := A_dataPrepEntities_documentRoot~[{aDocumentRoot}]
	END;

	result <-- GetRsmEntities(aDocumentRoot) = 
	PRE	aDocumentRoot : DocumentRoot &
		aDocumentRoot : ran(A_rsmEntities_documentRoot)
		
	THEN 
		result := A_rsmEntities_documentRoot~[{aDocumentRoot}]
	END;

	result <-- GetOwnsRouteBodyProperty(aDataPrepEntities) = 
	PRE	aDataPrepEntities : DataPrepEntities &
		aDataPrepEntities : ran(A_ownsRouteBodyProperty_dataPrepEntities)
		
	THEN 
		result := A_ownsRouteBodyProperty_dataPrepEntities~[{aDataPrepEntities}]
	END;

	result <-- GetKnowsAssetAndState(aDataPrepEntities) = 
	PRE	aDataPrepEntities : DataPrepEntities &
		aDataPrepEntities : ran(A_KnowsAssetAndState_dataPrepEntities)
		
	THEN 
		result := A_KnowsAssetAndState_dataPrepEntities~[{aDataPrepEntities}]
	END;

	result <-- GetUsesEtcsTopology(aRsmEntities) = 
	PRE	aRsmEntities : RsmEntities &
		aRsmEntities : dom(EtcsTopologies)
		
	THEN 
		result := EtcsTopologies(aRsmEntities)
	END;

	result <-- GetUsesPositionedRelation(aTopology) = 
	PRE	aTopology : Topology &
		aTopology : ran(A_usesPositionedRelation_topology)
		
	THEN 
		result := A_usesPositionedRelation_topology~[{aTopology}]
	END;

	result <-- GetUsesNetElement(aTopology) = 
	PRE	aTopology : Topology &
		aTopology : ran(A_usesNetElement_topology)
		
	THEN 
		result := A_usesNetElement_topology~[{aTopology}]
	END;

	result <-- GetRefersToTdsSection(aSectionAndVacancy) = 
	PRE	aSectionAndVacancy : SectionAndVacancy &
		aSectionAndVacancy : dom(VacancyToTds)
		
	THEN 
		result := VacancyToTds(aSectionAndVacancy)
	END;

	SetDataPrepEntities(aDocumentRoot,theDataPrepEntities) = 
	PRE	aDocumentRoot : DocumentRoot &
		theDataPrepEntities : FIN(DataPrepEntities) &
		(theDataPrepEntities * {aDocumentRoot}) /<: A_dataPrepEntities_documentRoot &
		!added.( added : theDataPrepEntities => A_dataPrepEntities_documentRoot[{added}] = {})
		
	THEN 
		A_dataPrepEntities_documentRoot := (A_dataPrepEntities_documentRoot |>> {aDocumentRoot}) \/ (theDataPrepEntities * {aDocumentRoot})
	END;

	SetRsmEntities(aDocumentRoot,theRsmEntities) = 
	PRE	aDocumentRoot : DocumentRoot &
		theRsmEntities : FIN(RsmEntities) &
		(theRsmEntities * {aDocumentRoot}) /<: A_rsmEntities_documentRoot &
		!added.( added : theRsmEntities => A_rsmEntities_documentRoot[{added}] = {})
		
	THEN 
		A_rsmEntities_documentRoot := (A_rsmEntities_documentRoot |>> {aDocumentRoot}) \/ (theRsmEntities * {aDocumentRoot})
	END;

	SetOwnsRouteBodyProperty(aDataPrepEntities,theOwnsRouteBodyProperty) = 
	PRE	aDataPrepEntities : DataPrepEntities &
		theOwnsRouteBodyProperty : FIN(RouteBodyProperty) &
		(theOwnsRouteBodyProperty * {aDataPrepEntities}) /<: A_ownsRouteBodyProperty_dataPrepEntities &
		!added.( added : theOwnsRouteBodyProperty => A_ownsRouteBodyProperty_dataPrepEntities[{added}] = {})
		
	THEN 
		A_ownsRouteBodyProperty_dataPrepEntities := (A_ownsRouteBodyProperty_dataPrepEntities |>> {aDataPrepEntities}) \/ (theOwnsRouteBodyProperty * {aDataPrepEntities})
	END;

	SetKnowsAssetAndState(aDataPrepEntities,theKnowsAssetAndState) = 
	PRE	aDataPrepEntities : DataPrepEntities &
		theKnowsAssetAndState : FIN(AssetAndState) &
		(theKnowsAssetAndState * {aDataPrepEntities}) /<: A_KnowsAssetAndState_dataPrepEntities &
		!added.( added : theKnowsAssetAndState => A_KnowsAssetAndState_dataPrepEntities[{added}] = {})
		
	THEN 
		A_KnowsAssetAndState_dataPrepEntities := (A_KnowsAssetAndState_dataPrepEntities |>> {aDataPrepEntities}) \/ (theKnowsAssetAndState * {aDataPrepEntities})
	END;

	SetUsesEtcsTopology(aRsmEntities,aUsesEtcsTopology) = 
	PRE	aRsmEntities : RsmEntities &
		aUsesEtcsTopology : Topology &
		{(aRsmEntities |-> aUsesEtcsTopology)} /<: EtcsTopologies &
		EtcsTopologies~[{aUsesEtcsTopology}] = {}
		
	THEN 
		EtcsTopologies := ({aRsmEntities} <<| EtcsTopologies) \/ {(aRsmEntities |-> aUsesEtcsTopology)}
	END;

	SetUsesPositionedRelation(aTopology,theUsesPositionedRelation) = 
	PRE	aTopology : Topology &
		theUsesPositionedRelation : FIN(PositionedRelation) &
		(theUsesPositionedRelation * {aTopology}) /<: A_usesPositionedRelation_topology &
		!added.( added : theUsesPositionedRelation => A_usesPositionedRelation_topology[{added}] = {})
		
	THEN 
		A_usesPositionedRelation_topology := (A_usesPositionedRelation_topology |>> {aTopology}) \/ (theUsesPositionedRelation * {aTopology})
	END;

	SetUsesNetElement(aTopology,theUsesNetElement) = 
	PRE	aTopology : Topology &
		theUsesNetElement : FIN(PositioningNetElement) &
		(theUsesNetElement * {aTopology}) /<: A_usesNetElement_topology &
		!added.( added : theUsesNetElement => A_usesNetElement_topology[{added}] = {})
		
	THEN 
		A_usesNetElement_topology := (A_usesNetElement_topology |>> {aTopology}) \/ (theUsesNetElement * {aTopology})
	END;

	UnsetDataPrepEntities(aDocumentRoot) = 
	PRE	aDocumentRoot : DocumentRoot
		
	THEN 
		A_dataPrepEntities_documentRoot := A_dataPrepEntities_documentRoot |>> {aDocumentRoot}
	END;

	UnsetRsmEntities(aDocumentRoot) = 
	PRE	aDocumentRoot : DocumentRoot
		
	THEN 
		A_rsmEntities_documentRoot := A_rsmEntities_documentRoot |>> {aDocumentRoot}
	END;

	UnsetOwnsRouteBodyProperty(aDataPrepEntities) = 
	PRE	aDataPrepEntities : DataPrepEntities
		
	THEN 
		A_ownsRouteBodyProperty_dataPrepEntities := A_ownsRouteBodyProperty_dataPrepEntities |>> {aDataPrepEntities}
	END;

	UnsetKnowsAssetAndState(aDataPrepEntities) = 
	PRE	aDataPrepEntities : DataPrepEntities
		
	THEN 
		A_KnowsAssetAndState_dataPrepEntities := A_KnowsAssetAndState_dataPrepEntities |>> {aDataPrepEntities}
	END;

	UnsetUsesEtcsTopology(aRsmEntities) = 
	PRE	aRsmEntities : RsmEntities
		
	THEN 
		EtcsTopologies := {aRsmEntities} <<| EtcsTopologies
	END;

	UnsetUsesPositionedRelation(aTopology) = 
	PRE	aTopology : Topology
		
	THEN 
		A_usesPositionedRelation_topology := A_usesPositionedRelation_topology |>> {aTopology}
	END;

	UnsetUsesNetElement(aTopology) = 
	PRE	aTopology : Topology
		
	THEN 
		A_usesNetElement_topology := A_usesNetElement_topology |>> {aTopology}
	END;

	AddDataPrepEntities(aDocumentRoot,aDataPrepEntities) = 
	PRE	aDocumentRoot : DocumentRoot &
		aDataPrepEntities : DataPrepEntities &
		(aDataPrepEntities |-> aDocumentRoot) /: A_dataPrepEntities_documentRoot &
		A_dataPrepEntities_documentRoot[{aDataPrepEntities}] = {}
		
	THEN 
		A_dataPrepEntities_documentRoot := A_dataPrepEntities_documentRoot \/ {(aDataPrepEntities |-> aDocumentRoot)}
	END;

	AddRsmEntities(aDocumentRoot,aRsmEntities) = 
	PRE	aDocumentRoot : DocumentRoot &
		aRsmEntities : RsmEntities &
		(aRsmEntities |-> aDocumentRoot) /: A_rsmEntities_documentRoot &
		A_rsmEntities_documentRoot[{aRsmEntities}] = {}
		
	THEN 
		A_rsmEntities_documentRoot := A_rsmEntities_documentRoot \/ {(aRsmEntities |-> aDocumentRoot)}
	END;

	AddOwnsRouteBodyProperty(aDataPrepEntities,aOwnsRouteBodyProperty) = 
	PRE	aDataPrepEntities : DataPrepEntities &
		aOwnsRouteBodyProperty : RouteBodyProperty &
		(aOwnsRouteBodyProperty |-> aDataPrepEntities) /: A_ownsRouteBodyProperty_dataPrepEntities &
		A_ownsRouteBodyProperty_dataPrepEntities[{aOwnsRouteBodyProperty}] = {}
		
	THEN 
		A_ownsRouteBodyProperty_dataPrepEntities := A_ownsRouteBodyProperty_dataPrepEntities \/ {(aOwnsRouteBodyProperty |-> aDataPrepEntities)}
	END;

	AddKnowsAssetAndState(aDataPrepEntities,aKnowsAssetAndState) = 
	PRE	aDataPrepEntities : DataPrepEntities &
		aKnowsAssetAndState : AssetAndState &
		(aKnowsAssetAndState |-> aDataPrepEntities) /: A_KnowsAssetAndState_dataPrepEntities &
		A_KnowsAssetAndState_dataPrepEntities[{aKnowsAssetAndState}] = {}
		
	THEN 
		A_KnowsAssetAndState_dataPrepEntities := A_KnowsAssetAndState_dataPrepEntities \/ {(aKnowsAssetAndState |-> aDataPrepEntities)}
	END;

	AddUsesPositionedRelation(aTopology,aUsesPositionedRelation) = 
	PRE	aTopology : Topology &
		aUsesPositionedRelation : PositionedRelation &
		(aUsesPositionedRelation |-> aTopology) /: A_usesPositionedRelation_topology &
		A_usesPositionedRelation_topology[{aUsesPositionedRelation}] = {}
		
	THEN 
		A_usesPositionedRelation_topology := A_usesPositionedRelation_topology \/ {(aUsesPositionedRelation |-> aTopology)}
	END;

	AddUsesNetElement(aTopology,aUsesNetElement) = 
	PRE	aTopology : Topology &
		aUsesNetElement : PositioningNetElement &
		(aUsesNetElement |-> aTopology) /: A_usesNetElement_topology &
		A_usesNetElement_topology[{aUsesNetElement}] = {}
		
	THEN 
		A_usesNetElement_topology := A_usesNetElement_topology \/ {(aUsesNetElement |-> aTopology)}
	END;

	RemoveDataPrepEntities(aDocumentRoot,aDataPrepEntities) = 
	PRE	aDocumentRoot : DocumentRoot &
		aDataPrepEntities : DataPrepEntities &
		(aDataPrepEntities |-> aDocumentRoot) : A_dataPrepEntities_documentRoot
		
	THEN 
		A_dataPrepEntities_documentRoot := A_dataPrepEntities_documentRoot - {(aDataPrepEntities |-> aDocumentRoot)}
	END;

	RemoveRsmEntities(aDocumentRoot,aRsmEntities) = 
	PRE	aDocumentRoot : DocumentRoot &
		aRsmEntities : RsmEntities &
		(aRsmEntities |-> aDocumentRoot) : A_rsmEntities_documentRoot
		
	THEN 
		A_rsmEntities_documentRoot := A_rsmEntities_documentRoot - {(aRsmEntities |-> aDocumentRoot)}
	END;

	RemoveOwnsRouteBodyProperty(aDataPrepEntities,aOwnsRouteBodyProperty) = 
	PRE	aDataPrepEntities : DataPrepEntities &
		aOwnsRouteBodyProperty : RouteBodyProperty &
		(aOwnsRouteBodyProperty |-> aDataPrepEntities) : A_ownsRouteBodyProperty_dataPrepEntities
		
	THEN 
		A_ownsRouteBodyProperty_dataPrepEntities := A_ownsRouteBodyProperty_dataPrepEntities - {(aOwnsRouteBodyProperty |-> aDataPrepEntities)}
	END;

	RemoveKnowsAssetAndState(aDataPrepEntities,aKnowsAssetAndState) = 
	PRE	aDataPrepEntities : DataPrepEntities &
		aKnowsAssetAndState : AssetAndState &
		(aKnowsAssetAndState |-> aDataPrepEntities) : A_KnowsAssetAndState_dataPrepEntities
		
	THEN 
		A_KnowsAssetAndState_dataPrepEntities := A_KnowsAssetAndState_dataPrepEntities - {(aKnowsAssetAndState |-> aDataPrepEntities)}
	END;

	RemoveUsesEtcsTopology(aRsmEntities,aUsesEtcsTopology) = 
	PRE	aRsmEntities : RsmEntities &
		aUsesEtcsTopology : Topology &
		(aRsmEntities |-> aUsesEtcsTopology) : EtcsTopologies
		
	THEN 
		EtcsTopologies := EtcsTopologies - {(aRsmEntities |-> aUsesEtcsTopology)}
	END;

	RemoveUsesPositionedRelation(aTopology,aUsesPositionedRelation) = 
	PRE	aTopology : Topology &
		aUsesPositionedRelation : PositionedRelation &
		(aUsesPositionedRelation |-> aTopology) : A_usesPositionedRelation_topology
		
	THEN 
		A_usesPositionedRelation_topology := A_usesPositionedRelation_topology - {(aUsesPositionedRelation |-> aTopology)}
	END;

	RemoveUsesNetElement(aTopology,aUsesNetElement) = 
	PRE	aTopology : Topology &
		aUsesNetElement : PositioningNetElement &
		(aUsesNetElement |-> aTopology) : A_usesNetElement_topology
		
	THEN 
		A_usesNetElement_topology := A_usesNetElement_topology - {(aUsesNetElement |-> aTopology)}
	END;

	result <-- GetInVacancyState(aSectionAndVacancy) = 
	PRE	aSectionAndVacancy : SectionAndVacancy &
		aSectionAndVacancy : dom(inVacancyState)
		
	THEN 
		result := inVacancyState(aSectionAndVacancy)
	END;

	SetInVacancyState(aSectionAndVacancy,aInVacancyState) = 
	PRE	aSectionAndVacancy : SectionAndVacancy &
		aInVacancyState : SectionVacancyTypes
		
	THEN 
		inVacancyState := ({aSectionAndVacancy} <<| inVacancyState)  \/ {(aSectionAndVacancy |-> aInVacancyState)}
	END;

	UnsetInVacancyState(aSectionAndVacancy) = 
	PRE	aSectionAndVacancy : SectionAndVacancy
		
	THEN 
		inVacancyState := {aSectionAndVacancy} <<| inVacancyState
	END;

	RemoveInVacancyState(aSectionAndVacancy,aInVacancyState) = 
	PRE	aSectionAndVacancy : SectionAndVacancy &
		aInVacancyState : SectionVacancyTypes &
		{(aSectionAndVacancy |-> aInVacancyState)} <: inVacancyState
		
	THEN 
		inVacancyState := inVacancyState - {(aSectionAndVacancy |-> aInVacancyState)}
	END


END
