
/*
 * This file was generated by Meeduse animator on Friday, June 25, 2021 at 3:12:29 PM CEST
 */


MACHINE 
	
	bnet

DEFINITIONS
	


	END_OF_GENERATED_DEFINITIONS_FOR == bnet;
	

SETS
	
	PLACE;
	PLACETYPING;
	INITIALMARKING;
	TRANSITION;
	GUARD;
	ACTION

CONSTANTS
	
	GUARD1,
	ACTION1,
	GUARD2,
	ACTION2,
	GUARD3,
	ACTION3,
	GUARD4,
	ACTION4,
	GUARD5,
	ACTION5,
	GUARD6,
	ACTION6,
	GUARD7,
	ACTION7,
	GUARD8,
	ACTION8,
	GUARD9,
	ACTION9,
	GUARD10,
	ACTION10,
	GUARD11,
	ACTION11,
	GUARD12,
	ACTION12,
	PLACE1,
	PLACE2,
	PLACE3,
	PLACE4,
	PLACE5,
	PLACE6,
	PLACETYPING1,
	PLACETYPING2,
	PLACETYPING3,
	PLACETYPING4,
	PLACETYPING5,
	PLACETYPING6,
	INITIALMARKING1,
	INITIALMARKING2,
	INITIALMARKING3,
	INITIALMARKING4,
	INITIALMARKING5,
	INITIALMARKING6,
	TRANSITION1,
	TRANSITION2,
	TRANSITION3,
	TRANSITION4

PROPERTIES
	
	GUARD1 : GUARD &
	ACTION1 : ACTION &
	GUARD2 : GUARD &
	ACTION2 : ACTION &
	GUARD3 : GUARD &
	ACTION3 : ACTION &
	GUARD4 : GUARD &
	ACTION4 : ACTION &
	GUARD5 : GUARD &
	ACTION5 : ACTION &
	GUARD6 : GUARD &
	ACTION6 : ACTION &
	GUARD7 : GUARD &
	ACTION7 : ACTION &
	GUARD8 : GUARD &
	ACTION8 : ACTION &
	GUARD9 : GUARD &
	ACTION9 : ACTION &
	GUARD10 : GUARD &
	ACTION10 : ACTION &
	GUARD11 : GUARD &
	ACTION11 : ACTION &
	GUARD12 : GUARD &
	ACTION12 : ACTION &
	PLACE1 : PLACE &
	PLACE2 : PLACE &
	PLACE3 : PLACE &
	PLACE4 : PLACE &
	PLACE5 : PLACE &
	PLACE6 : PLACE &
	PLACETYPING1 : PLACETYPING &
	PLACETYPING2 : PLACETYPING &
	PLACETYPING3 : PLACETYPING &
	PLACETYPING4 : PLACETYPING &
	PLACETYPING5 : PLACETYPING &
	PLACETYPING6 : PLACETYPING &
	INITIALMARKING1 : INITIALMARKING &
	INITIALMARKING2 : INITIALMARKING &
	INITIALMARKING3 : INITIALMARKING &
	INITIALMARKING4 : INITIALMARKING &
	INITIALMARKING5 : INITIALMARKING &
	INITIALMARKING6 : INITIALMARKING &
	TRANSITION1 : TRANSITION &
	TRANSITION2 : TRANSITION &
	TRANSITION3 : TRANSITION &
	TRANSITION4 : TRANSITION &
	card({PLACE1,PLACE2,PLACE3,PLACE4,PLACE5,PLACE6}) = 6 &
	card(PLACE) >= 6 &
	card({GUARD1,GUARD2,GUARD3,GUARD4,GUARD5,GUARD6,GUARD7,GUARD8,GUARD9,GUARD10,GUARD11,GUARD12}) = 12 &
	card(GUARD) >= 12 &
	card({TRANSITION1,TRANSITION2,TRANSITION3,TRANSITION4}) = 4 &
	card(TRANSITION) >= 4 &
	card({ACTION1,ACTION2,ACTION3,ACTION4,ACTION5,ACTION6,ACTION7,ACTION8,ACTION9,ACTION10,ACTION11,ACTION12}) = 12 &
	card(ACTION) >= 12 &
	card({PLACETYPING1,PLACETYPING2,PLACETYPING3,PLACETYPING4,PLACETYPING5,PLACETYPING6}) = 6 &
	card(PLACETYPING) >= 6 &
	card({INITIALMARKING1,INITIALMARKING2,INITIALMARKING3,INITIALMARKING4,INITIALMARKING5,INITIALMARKING6}) = 6 &
	card(INITIALMARKING) >= 6

ABSTRACT_VARIABLES
	
	Place,
	PlaceTyping,
	InitialMarking,
	Transition,
	Guard,
	Action,
	Consumption,
	Production,
	Consume,
	Produce,
	refP,
	initP,
	pGrd,
	grds,
	pAct,
	acts,
	Place_name,
	InitialMarking_token,
	Transition_name,
	Guard_name,
	Guard_token,
	Action_name,
	Action_token

INVARIANT
	
	/*
	 * Start of user code INVARIANT (NOT GENERATED)
	 */
	
	/*
	 * End of user code
	 */
	
	
	Place : FIN(PLACE) &
	PlaceTyping : FIN(PLACETYPING) &
	InitialMarking : FIN(INITIALMARKING) &
	Transition : FIN(TRANSITION) &
	Guard : FIN(GUARD) &
	Action : FIN(ACTION) &
	Consumption <: Guard &
	Production <: Guard &
	Consume <: Action &
	Produce <: Action &
	refP : PlaceTyping --> Place &
	initP : InitialMarking --> Place &
	pGrd : Guard --> Place &
	grds : Transition <-> Guard &
	pAct : Action --> Place &
	acts : Transition <-> Action &
	Place_name : Place >-> STRING &
	InitialMarking_token : InitialMarking --> INTEGER &
	Transition_name : Transition >-> STRING &
	Guard_name : Guard >-> STRING &
	Guard_token : Guard --> INTEGER &
	Action_name : Action >-> STRING &
	Action_token : Action --> INTEGER &
	Consumption /\ Production = {} &
	Produce /\ Consume = {}

INITIALISATION
	
	Guard := {GUARD1,GUARD2,GUARD3,GUARD4,GUARD5,GUARD6,GUARD7,GUARD8,GUARD9,GUARD10,GUARD11,GUARD12} ||
	Place := {PLACE1,PLACE2,PLACE3,PLACE4,PLACE5,PLACE6} ||
	Action := {ACTION1,ACTION2,ACTION3,ACTION4,ACTION5,ACTION6,ACTION7,ACTION8,ACTION9,ACTION10,ACTION11,ACTION12} ||
	PlaceTyping := {PLACETYPING1,PLACETYPING2,PLACETYPING3,PLACETYPING4,PLACETYPING5,PLACETYPING6} ||
	InitialMarking := {INITIALMARKING1,INITIALMARKING2,INITIALMARKING3,INITIALMARKING4,INITIALMARKING5,INITIALMARKING6} ||
	Produce := {ACTION1,ACTION3,ACTION6,ACTION9,ACTION10,ACTION12} ||
	Consume := {ACTION2,ACTION4,ACTION5,ACTION7,ACTION8,ACTION11} ||
	Transition := {TRANSITION1,TRANSITION2,TRANSITION3,TRANSITION4} ||
	Consumption := {GUARD1,GUARD3,GUARD6,GUARD9,GUARD10,GUARD12} ||
	Production := {GUARD2,GUARD4,GUARD5,GUARD7,GUARD8,GUARD11} ||
	Transition_name := {(TRANSITION1 |-> "consume"),(TRANSITION2 |-> "start"),(TRANSITION3 |-> "produce"),(TRANSITION4 |-> "request")} ||
	Action_name := {(ACTION1 |-> "a1"),(ACTION2 |-> "a10"),(ACTION3 |-> "a11"),(ACTION4 |-> "a12"),(ACTION5 |-> "a2"),(ACTION6 |-> "a3"),(ACTION7 |-> "a4"),(ACTION8 |-> "a5"),(ACTION9 |-> "a6"),(ACTION10 |-> "a7"),(ACTION11 |-> "a8"),(ACTION12 |-> "a9")} ||
	Place_name := {(PLACE1 |-> "pending"),(PLACE2 |-> "progress"),(PLACE3 |-> "buffer"),(PLACE4 |-> "ready"),(PLACE5 |-> "accept"),(PLACE6 |-> "bound")} ||
	Guard_name := {(GUARD1 |-> "pending_start"),(GUARD2 |-> "consume_ready"),(GUARD3 |-> "bound_produce"),(GUARD4 |-> "consume_bound"),(GUARD5 |-> "start_progress"),(GUARD6 |-> "progress_produce"),(GUARD7 |-> "produce_pending"),(GUARD8 |-> "produce_buffer"),(GUARD9 |-> "buffer_request"),(GUARD10 |-> "ready_request"),(GUARD11 |-> "request_accept"),(GUARD12 |-> "accept_consume")} ||
	Guard_token := {(GUARD1 |-> 1),(GUARD2 |-> 1),(GUARD3 |-> 1),(GUARD4 |-> 5),(GUARD5 |-> 1),(GUARD6 |-> 1),(GUARD7 |-> 1),(GUARD8 |-> 1),(GUARD9 |-> 5),(GUARD10 |-> 1),(GUARD11 |-> 1),(GUARD12 |-> 1)} ||
	Action_token := {(ACTION1 |-> 1),(ACTION2 |-> 1),(ACTION3 |-> 1),(ACTION4 |-> 5),(ACTION5 |-> 1),(ACTION6 |-> 1),(ACTION7 |-> 1),(ACTION8 |-> 1),(ACTION9 |-> 5),(ACTION10 |-> 1),(ACTION11 |-> 1),(ACTION12 |-> 1)} ||
	InitialMarking_token := {(INITIALMARKING1 |-> 1),(INITIALMARKING2 |-> 0),(INITIALMARKING3 |-> 0),(INITIALMARKING4 |-> 1),(INITIALMARKING5 |-> 0),(INITIALMARKING6 |-> 10)} ||
	initP := {(INITIALMARKING1 |-> PLACE1),(INITIALMARKING2 |-> PLACE2),(INITIALMARKING3 |-> PLACE3),(INITIALMARKING4 |-> PLACE4),(INITIALMARKING5 |-> PLACE5),(INITIALMARKING6 |-> PLACE6)} ||
	pGrd := {(GUARD1 |-> PLACE1),(GUARD2 |-> PLACE4),(GUARD3 |-> PLACE6),(GUARD4 |-> PLACE6),(GUARD5 |-> PLACE2),(GUARD6 |-> PLACE2),(GUARD7 |-> PLACE1),(GUARD8 |-> PLACE3),(GUARD9 |-> PLACE3),(GUARD10 |-> PLACE4),(GUARD11 |-> PLACE5),(GUARD12 |-> PLACE5)} ||
	refP := {(PLACETYPING1 |-> PLACE1),(PLACETYPING2 |-> PLACE2),(PLACETYPING3 |-> PLACE3),(PLACETYPING4 |-> PLACE4),(PLACETYPING5 |-> PLACE5),(PLACETYPING6 |-> PLACE6)} ||
	acts := {(TRANSITION1 |-> ACTION2),(TRANSITION1 |-> ACTION4),(TRANSITION1 |-> ACTION12),(TRANSITION2 |-> ACTION1),(TRANSITION2 |-> ACTION5),(TRANSITION3 |-> ACTION3),(TRANSITION3 |-> ACTION6),(TRANSITION3 |-> ACTION7),(TRANSITION3 |-> ACTION8),(TRANSITION4 |-> ACTION9),(TRANSITION4 |-> ACTION10),(TRANSITION4 |-> ACTION11)} ||
	pAct := {(ACTION1 |-> PLACE1),(ACTION2 |-> PLACE4),(ACTION3 |-> PLACE6),(ACTION4 |-> PLACE6),(ACTION5 |-> PLACE2),(ACTION6 |-> PLACE2),(ACTION7 |-> PLACE1),(ACTION8 |-> PLACE3),(ACTION9 |-> PLACE3),(ACTION10 |-> PLACE4),(ACTION11 |-> PLACE5),(ACTION12 |-> PLACE5)} ||
	grds := {(TRANSITION1 |-> GUARD2),(TRANSITION1 |-> GUARD4),(TRANSITION1 |-> GUARD12),(TRANSITION2 |-> GUARD1),(TRANSITION2 |-> GUARD5),(TRANSITION3 |-> GUARD3),(TRANSITION3 |-> GUARD6),(TRANSITION3 |-> GUARD7),(TRANSITION3 |-> GUARD8),(TRANSITION4 |-> GUARD9),(TRANSITION4 |-> GUARD10),(TRANSITION4 |-> GUARD11)}

OPERATIONS
	
	/*
	 * Start of user code OPERATIONS (NOT GENERATED)
	 */
	
	/*
	 * End of user code
	 */
	
	
	Place_NEW(aPlace,aName) = 
	PRE	aPlace : PLACE &
		aName : STRING &
		aPlace /: Place &
		aName /: ran(Place_name)
		
	THEN 
		Place := Place \/ {aPlace} ||
		Place_name := Place_name \/ {(aPlace |-> aName)}
	END;

	PlaceTyping_NEW(aPlaceTyping,aRefP) = 
	PRE	aPlaceTyping : PLACETYPING &
		aRefP : Place &
		aPlaceTyping /: PlaceTyping
		
	THEN 
		PlaceTyping := PlaceTyping \/ {aPlaceTyping} ||
		refP := refP \/ {(aPlaceTyping |-> aRefP)}
	END;

	InitialMarking_NEW(aInitialMarking,aInitP,aToken) = 
	PRE	aInitialMarking : INITIALMARKING &
		aInitP : Place &
		aToken : INTEGER &
		aInitialMarking /: InitialMarking
		
	THEN 
		InitialMarking := InitialMarking \/ {aInitialMarking} ||
		initP := initP \/ {(aInitialMarking |-> aInitP)} ||
		InitialMarking_token := InitialMarking_token \/ {(aInitialMarking |-> aToken)}
	END;

	Transition_NEW(aTransition,aName) = 
	PRE	aTransition : TRANSITION &
		aName : STRING &
		aTransition /: Transition &
		aName /: ran(Transition_name)
		
	THEN 
		Transition := Transition \/ {aTransition} ||
		Transition_name := Transition_name \/ {(aTransition |-> aName)}
	END;

	Guard_NEW(aGuard,aPGrd,aName,aToken) = 
	PRE	aGuard : GUARD &
		aPGrd : Place &
		aName : STRING &
		aToken : INTEGER &
		aGuard /: Guard &
		aName /: ran(Guard_name)
		
	THEN 
		Guard := Guard \/ {aGuard} ||
		pGrd := pGrd \/ {(aGuard |-> aPGrd)} ||
		Guard_name := Guard_name \/ {(aGuard |-> aName)} ||
		Guard_token := Guard_token \/ {(aGuard |-> aToken)}
	END;

	Action_NEW(aAction,aPAct,aName,aToken) = 
	PRE	aAction : ACTION &
		aPAct : Place &
		aName : STRING &
		aToken : INTEGER &
		aAction /: Action &
		aName /: ran(Action_name)
		
	THEN 
		Action := Action \/ {aAction} ||
		pAct := pAct \/ {(aAction |-> aPAct)} ||
		Action_name := Action_name \/ {(aAction |-> aName)} ||
		Action_token := Action_token \/ {(aAction |-> aToken)}
	END;

	Consumption_NEW(aConsumption,aPGrd,aName,aToken) = 
	PRE	aConsumption : GUARD &
		aPGrd : Place &
		aName : STRING &
		aToken : INTEGER &
		aConsumption /: Guard &
		aName /: ran(Guard_name)
		
	THEN 
		Consumption := Consumption \/ {aConsumption} ||
		Guard := Guard \/ {aConsumption} ||
		pGrd := pGrd \/ {(aConsumption |-> aPGrd)} ||
		Guard_name := Guard_name \/ {(aConsumption |-> aName)} ||
		Guard_token := Guard_token \/ {(aConsumption |-> aToken)}
	END;

	Production_NEW(aProduction,aPGrd,aName,aToken) = 
	PRE	aProduction : GUARD &
		aPGrd : Place &
		aName : STRING &
		aToken : INTEGER &
		aProduction /: Guard &
		aName /: ran(Guard_name)
		
	THEN 
		Production := Production \/ {aProduction} ||
		Guard := Guard \/ {aProduction} ||
		pGrd := pGrd \/ {(aProduction |-> aPGrd)} ||
		Guard_name := Guard_name \/ {(aProduction |-> aName)} ||
		Guard_token := Guard_token \/ {(aProduction |-> aToken)}
	END;

	Consume_NEW(aConsume,aPAct,aName,aToken) = 
	PRE	aConsume : ACTION &
		aPAct : Place &
		aName : STRING &
		aToken : INTEGER &
		aConsume /: Action &
		aName /: ran(Action_name)
		
	THEN 
		Consume := Consume \/ {aConsume} ||
		Action := Action \/ {aConsume} ||
		pAct := pAct \/ {(aConsume |-> aPAct)} ||
		Action_name := Action_name \/ {(aConsume |-> aName)} ||
		Action_token := Action_token \/ {(aConsume |-> aToken)}
	END;

	Produce_NEW(aProduce,aPAct,aName,aToken) = 
	PRE	aProduce : ACTION &
		aPAct : Place &
		aName : STRING &
		aToken : INTEGER &
		aProduce /: Action &
		aName /: ran(Action_name)
		
	THEN 
		Produce := Produce \/ {aProduce} ||
		Action := Action \/ {aProduce} ||
		pAct := pAct \/ {(aProduce |-> aPAct)} ||
		Action_name := Action_name \/ {(aProduce |-> aName)} ||
		Action_token := Action_token \/ {(aProduce |-> aToken)}
	END;

	Place_Free(aPlace) = 
	PRE	aPlace : Place &
		refP~[{aPlace}] = {} &
		initP~[{aPlace}] = {} &
		pGrd~[{aPlace}] = {} &
		pAct~[{aPlace}] = {}
		
	THEN 
		Place := Place - {aPlace} ||
		refP := refP |>> {aPlace} ||
		initP := initP |>> {aPlace} ||
		pGrd := pGrd |>> {aPlace} ||
		pAct := pAct |>> {aPlace} ||
		Place_name := {aPlace} <<| Place_name
	END;

	PlaceTyping_Free(aPlaceTyping) = 
	PRE	aPlaceTyping : PlaceTyping
		
	THEN 
		PlaceTyping := PlaceTyping - {aPlaceTyping} ||
		refP := {aPlaceTyping} <<| refP
	END;

	InitialMarking_Free(aInitialMarking) = 
	PRE	aInitialMarking : InitialMarking
		
	THEN 
		InitialMarking := InitialMarking - {aInitialMarking} ||
		initP := {aInitialMarking} <<| initP ||
		InitialMarking_token := {aInitialMarking} <<| InitialMarking_token
	END;

	Transition_Free(aTransition) = 
	PRE	aTransition : Transition
		
	THEN 
		Transition := Transition - {aTransition} ||
		grds := {aTransition} <<| grds ||
		acts := {aTransition} <<| acts ||
		Transition_name := {aTransition} <<| Transition_name
	END;

	Guard_Free(aGuard) = 
	PRE	aGuard : Guard &
		aGuard /: Consumption &
		aGuard /: Production
		
	THEN 
		Guard := Guard - {aGuard} ||
		pGrd := {aGuard} <<| pGrd ||
		grds := grds |>> {aGuard} ||
		Guard_name := {aGuard} <<| Guard_name ||
		Guard_token := {aGuard} <<| Guard_token
	END;

	Action_Free(aAction) = 
	PRE	aAction : Action &
		aAction /: Produce &
		aAction /: Consume
		
	THEN 
		Action := Action - {aAction} ||
		pAct := {aAction} <<| pAct ||
		acts := acts |>> {aAction} ||
		Action_name := {aAction} <<| Action_name ||
		Action_token := {aAction} <<| Action_token
	END;

	Consumption_Free(aConsumption) = 
	PRE	aConsumption : Consumption
		
	THEN 
		Consumption := Consumption - {aConsumption} ||
		Guard := Guard - {aConsumption} ||
		pGrd := {aConsumption} <<| pGrd ||
		grds := grds |>> {aConsumption} ||
		Guard_name := {aConsumption} <<| Guard_name ||
		Guard_token := {aConsumption} <<| Guard_token
	END;

	Production_Free(aProduction) = 
	PRE	aProduction : Production
		
	THEN 
		Production := Production - {aProduction} ||
		Guard := Guard - {aProduction} ||
		pGrd := {aProduction} <<| pGrd ||
		grds := grds |>> {aProduction} ||
		Guard_name := {aProduction} <<| Guard_name ||
		Guard_token := {aProduction} <<| Guard_token
	END;

	Consume_Free(aConsume) = 
	PRE	aConsume : Consume
		
	THEN 
		Consume := Consume - {aConsume} ||
		Action := Action - {aConsume} ||
		pAct := {aConsume} <<| pAct ||
		acts := acts |>> {aConsume} ||
		Action_name := {aConsume} <<| Action_name ||
		Action_token := {aConsume} <<| Action_token
	END;

	Produce_Free(aProduce) = 
	PRE	aProduce : Produce
		
	THEN 
		Produce := Produce - {aProduce} ||
		Action := Action - {aProduce} ||
		pAct := {aProduce} <<| pAct ||
		acts := acts |>> {aProduce} ||
		Action_name := {aProduce} <<| Action_name ||
		Action_token := {aProduce} <<| Action_token
	END;

	result <-- PlaceTyping_GetRefP(aPlaceTyping) = 
	PRE	aPlaceTyping : PlaceTyping &
		aPlaceTyping : dom(refP)
		
	THEN 
		result := refP(aPlaceTyping)
	END;

	result <-- InitialMarking_GetInitP(aInitialMarking) = 
	PRE	aInitialMarking : InitialMarking &
		aInitialMarking : dom(initP)
		
	THEN 
		result := initP(aInitialMarking)
	END;

	result <-- Transition_GetGrds(aTransition) = 
	PRE	aTransition : Transition &
		aTransition : dom(grds)
		
	THEN 
		result := grds[{aTransition}]
	END;

	result <-- Transition_GetActs(aTransition) = 
	PRE	aTransition : Transition &
		aTransition : dom(acts)
		
	THEN 
		result := acts[{aTransition}]
	END;

	result <-- Guard_GetPGrd(aGuard) = 
	PRE	aGuard : Guard &
		aGuard : dom(pGrd)
		
	THEN 
		result := pGrd(aGuard)
	END;

	result <-- Action_GetPAct(aAction) = 
	PRE	aAction : Action &
		aAction : dom(pAct)
		
	THEN 
		result := pAct(aAction)
	END;

	PlaceTyping_SetRefP(aPlaceTyping,aRefP) = 
	PRE	aPlaceTyping : PlaceTyping &
		aRefP : Place &
		{(aPlaceTyping |-> aRefP)} /<: refP
		
	THEN 
		refP := ({aPlaceTyping} <<| refP) \/ {(aPlaceTyping |-> aRefP)}
	END;

	InitialMarking_SetInitP(aInitialMarking,aInitP) = 
	PRE	aInitialMarking : InitialMarking &
		aInitP : Place &
		{(aInitialMarking |-> aInitP)} /<: initP
		
	THEN 
		initP := ({aInitialMarking} <<| initP) \/ {(aInitialMarking |-> aInitP)}
	END;

	Transition_SetGrds(aTransition,theGrds) = 
	PRE	aTransition : Transition &
		theGrds : FIN(Guard) &
		({aTransition} * theGrds) /<: grds
		
	THEN 
		grds := ({aTransition} <<| grds) \/ ({aTransition} * theGrds)
	END;

	Transition_SetActs(aTransition,theActs) = 
	PRE	aTransition : Transition &
		theActs : FIN(Action) &
		({aTransition} * theActs) /<: acts
		
	THEN 
		acts := ({aTransition} <<| acts) \/ ({aTransition} * theActs)
	END;

	Guard_SetPGrd(aGuard,aPGrd) = 
	PRE	aGuard : Guard &
		aPGrd : Place &
		{(aGuard |-> aPGrd)} /<: pGrd
		
	THEN 
		pGrd := ({aGuard} <<| pGrd) \/ {(aGuard |-> aPGrd)}
	END;

	Action_SetPAct(aAction,aPAct) = 
	PRE	aAction : Action &
		aPAct : Place &
		{(aAction |-> aPAct)} /<: pAct
		
	THEN 
		pAct := ({aAction} <<| pAct) \/ {(aAction |-> aPAct)}
	END;

	Transition_UnsetGrds(aTransition) = 
	PRE	aTransition : Transition
		
	THEN 
		grds := {aTransition} <<| grds
	END;

	Transition_UnsetActs(aTransition) = 
	PRE	aTransition : Transition
		
	THEN 
		acts := {aTransition} <<| acts
	END;

	Transition_AddGrds(aTransition,aGrds) = 
	PRE	aTransition : Transition &
		aGrds : Guard &
		(aTransition |-> aGrds) /: grds
		
	THEN 
		grds := grds \/ {(aTransition |-> aGrds)}
	END;

	Transition_AddActs(aTransition,aActs) = 
	PRE	aTransition : Transition &
		aActs : Action &
		(aTransition |-> aActs) /: acts
		
	THEN 
		acts := acts \/ {(aTransition |-> aActs)}
	END;

	Transition_RemoveGrds(aTransition,aGrds) = 
	PRE	aTransition : Transition &
		aGrds : Guard &
		(aTransition |-> aGrds) : grds
		
	THEN 
		grds := grds - {(aTransition |-> aGrds)}
	END;

	Transition_RemoveActs(aTransition,aActs) = 
	PRE	aTransition : Transition &
		aActs : Action &
		(aTransition |-> aActs) : acts
		
	THEN 
		acts := acts - {(aTransition |-> aActs)}
	END;

	result <-- Place_GetName(aPlace) = 
	PRE	aPlace : Place &
		aPlace : dom(Place_name)
		
	THEN 
		result := Place_name(aPlace)
	END;

	result <-- InitialMarking_GetToken(aInitialMarking) = 
	PRE	aInitialMarking : InitialMarking &
		aInitialMarking : dom(InitialMarking_token)
		
	THEN 
		result := InitialMarking_token(aInitialMarking)
	END;

	result <-- Transition_GetName(aTransition) = 
	PRE	aTransition : Transition &
		aTransition : dom(Transition_name)
		
	THEN 
		result := Transition_name(aTransition)
	END;

	result <-- Guard_GetName(aGuard) = 
	PRE	aGuard : Guard &
		aGuard : dom(Guard_name)
		
	THEN 
		result := Guard_name(aGuard)
	END;

	result <-- Guard_GetToken(aGuard) = 
	PRE	aGuard : Guard &
		aGuard : dom(Guard_token)
		
	THEN 
		result := Guard_token(aGuard)
	END;

	result <-- Action_GetName(aAction) = 
	PRE	aAction : Action &
		aAction : dom(Action_name)
		
	THEN 
		result := Action_name(aAction)
	END;

	result <-- Action_GetToken(aAction) = 
	PRE	aAction : Action &
		aAction : dom(Action_token)
		
	THEN 
		result := Action_token(aAction)
	END;

	Place_SetName(aPlace,aName) = 
	PRE	aPlace : Place &
		aName : STRING &
		aName /: ran(Place_name)
		
	THEN 
		Place_name := ({aPlace} <<| Place_name)  \/ {(aPlace |-> aName)}
	END;

	InitialMarking_SetToken(aInitialMarking,aToken) = 
	PRE	aInitialMarking : InitialMarking &
		aToken : INTEGER
		
	THEN 
		InitialMarking_token := ({aInitialMarking} <<| InitialMarking_token)  \/ {(aInitialMarking |-> aToken)}
	END;

	Transition_SetName(aTransition,aName) = 
	PRE	aTransition : Transition &
		aName : STRING &
		aName /: ran(Transition_name)
		
	THEN 
		Transition_name := ({aTransition} <<| Transition_name)  \/ {(aTransition |-> aName)}
	END;

	Guard_SetName(aGuard,aName) = 
	PRE	aGuard : Guard &
		aName : STRING &
		aName /: ran(Guard_name)
		
	THEN 
		Guard_name := ({aGuard} <<| Guard_name)  \/ {(aGuard |-> aName)}
	END;

	Guard_SetToken(aGuard,aToken) = 
	PRE	aGuard : Guard &
		aToken : INTEGER
		
	THEN 
		Guard_token := ({aGuard} <<| Guard_token)  \/ {(aGuard |-> aToken)}
	END;

	Action_SetName(aAction,aName) = 
	PRE	aAction : Action &
		aName : STRING &
		aName /: ran(Action_name)
		
	THEN 
		Action_name := ({aAction} <<| Action_name)  \/ {(aAction |-> aName)}
	END;

	Action_SetToken(aAction,aToken) = 
	PRE	aAction : Action &
		aToken : INTEGER
		
	THEN 
		Action_token := ({aAction} <<| Action_token)  \/ {(aAction |-> aToken)}
	END


END
