
/*
 * This file was generated by Meeduse on Thursday, September 9, 2021 at 1:57:43 PM CEST
 */


MACHINE 
	
	gpuScheduler

SETS
	
	SERVER;
	GPU;
	PROCESS

ABSTRACT_VARIABLES
	
	Server,
	Gpu,
	Process,
	running,
	gpus,
	processes,
	Gpu_size

INVARIANT
	
	/*
	 * Start of user code INVARIANT (NOT GENERATED)
	 */
	
	/*
	 * End of user code
	 */
	
	
	Server : FIN(SERVER) &
	Gpu : FIN(GPU) &
	Process : FIN(PROCESS) &
	running : Process +-> Gpu &
	gpus : Gpu +-> Server &
	processes : Process +-> Server &
	Gpu_size : Gpu --> INTEGER

INITIALISATION
	
	Server := {} ||
	Gpu := {} ||
	Process := {} ||
	running := {} ||
	gpus := {} ||
	processes := {} ||
	Gpu_size := {}

OPERATIONS
	
	/*
	 * Start of user code OPERATIONS (NOT GENERATED)
	 */
	
	/*
	 * End of user code
	 */
	
	
	Server_NEW(aServer) = 
	PRE	aServer : SERVER &
		aServer /: Server
		
	THEN 
		Server := Server \/ {aServer}
	END;

	Gpu_NEW(aGpu,aSize) = 
	PRE	aGpu : GPU &
		aSize : INTEGER &
		aGpu /: Gpu
		
	THEN 
		Gpu := Gpu \/ {aGpu} ||
		Gpu_size := Gpu_size \/ {(aGpu |-> aSize)}
	END;

	Process_NEW(aProcess) = 
	PRE	aProcess : PROCESS &
		aProcess /: Process
		
	THEN 
		Process := Process \/ {aProcess}
	END;

	Server_Free(aServer) = 
	PRE	aServer : Server
		
	THEN 
		Server := Server - {aServer} ||
		gpus := gpus |>> {aServer} ||
		processes := processes |>> {aServer}
	END;

	Gpu_Free(aGpu) = 
	PRE	aGpu : Gpu
		
	THEN 
		Gpu := Gpu - {aGpu} ||
		running := running |>> {aGpu} ||
		gpus := {aGpu} <<| gpus ||
		Gpu_size := {aGpu} <<| Gpu_size
	END;

	Process_Free(aProcess) = 
	PRE	aProcess : Process
		
	THEN 
		Process := Process - {aProcess} ||
		running := {aProcess} <<| running ||
		processes := {aProcess} <<| processes
	END;

	result <-- Server_GetGpus(aServer) = 
	PRE	aServer : Server &
		aServer : ran(gpus)
		
	THEN 
		result := gpus~[{aServer}]
	END;

	result <-- Server_GetPocesses(aServer) = 
	PRE	aServer : Server &
		aServer : ran(processes)
		
	THEN 
		result := processes~[{aServer}]
	END;

	result <-- Gpu_GetUsedBy(aGpu) = 
	PRE	aGpu : Gpu &
		aGpu : ran(running)
		
	THEN 
		result := running~[{aGpu}]
	END;

	result <-- Process_GetGpu(aProcess) = 
	PRE	aProcess : Process &
		aProcess : dom(running)
		
	THEN 
		result := running(aProcess)
	END;

	Server_SetGpus(aServer,theGpus) = 
	PRE	aServer : Server &
		theGpus : FIN(Gpu) &
		(theGpus * {aServer}) /<: gpus &
		!added.( added : theGpus => gpus[{added}] = {})
		
	THEN 
		gpus := (gpus |>> {aServer}) \/ (theGpus * {aServer})
	END;

	Server_SetPocesses(aServer,thePocesses) = 
	PRE	aServer : Server &
		thePocesses : FIN(Process) &
		(thePocesses * {aServer}) /<: processes &
		!added.( added : thePocesses => processes[{added}] = {})
		
	THEN 
		processes := (processes |>> {aServer}) \/ (thePocesses * {aServer})
	END;

	Gpu_SetUsedBy(aGpu,theUsedBy) = 
	PRE	aGpu : Gpu &
		theUsedBy : FIN(Process) &
		(theUsedBy * {aGpu}) /<: running &
		!added.( added : theUsedBy => running[{added}] = {})
		
	THEN 
		running := (running |>> {aGpu}) \/ (theUsedBy * {aGpu})
	END;

	Process_SetGpu(aProcess,aGpu) = 
	PRE	aProcess : Process &
		aGpu : Gpu &
		{(aProcess |-> aGpu)} /<: running
		
	THEN 
		running := ({aProcess} <<| running) \/ {(aProcess |-> aGpu)}
	END;

	Server_UnsetGpus(aServer) = 
	PRE	aServer : Server
		
	THEN 
		gpus := gpus |>> {aServer}
	END;

	Server_UnsetPocesses(aServer) = 
	PRE	aServer : Server
		
	THEN 
		processes := processes |>> {aServer}
	END;

	Gpu_UnsetUsedBy(aGpu) = 
	PRE	aGpu : Gpu
		
	THEN 
		running := running |>> {aGpu}
	END;

	Process_UnsetGpu(aProcess) = 
	PRE	aProcess : Process
		
	THEN 
		running := {aProcess} <<| running
	END;

	Server_AddGpus(aServer,aGpus) = 
	PRE	aServer : Server &
		aGpus : Gpu &
		(aGpus |-> aServer) /: gpus &
		gpus[{aGpus}] = {}
		
	THEN 
		gpus := gpus \/ {(aGpus |-> aServer)}
	END;

	Server_AddPocesses(aServer,aPocesses) = 
	PRE	aServer : Server &
		aPocesses : Process &
		(aPocesses |-> aServer) /: processes &
		processes[{aPocesses}] = {}
		
	THEN 
		processes := processes \/ {(aPocesses |-> aServer)}
	END;

	Gpu_AddUsedBy(aGpu,aUsedBy) = 
	PRE	aGpu : Gpu &
		aUsedBy : Process &
		(aUsedBy |-> aGpu) /: running &
		running[{aUsedBy}] = {}
		
	THEN 
		running := running \/ {(aUsedBy |-> aGpu)}
	END;

	Server_RemoveGpus(aServer,aGpus) = 
	PRE	aServer : Server &
		aGpus : Gpu &
		(aGpus |-> aServer) : gpus
		
	THEN 
		gpus := gpus - {(aGpus |-> aServer)}
	END;

	Server_RemovePocesses(aServer,aPocesses) = 
	PRE	aServer : Server &
		aPocesses : Process &
		(aPocesses |-> aServer) : processes
		
	THEN 
		processes := processes - {(aPocesses |-> aServer)}
	END;

	Gpu_RemoveUsedBy(aGpu,aUsedBy) = 
	PRE	aGpu : Gpu &
		aUsedBy : Process &
		(aUsedBy |-> aGpu) : running
		
	THEN 
		running := running - {(aUsedBy |-> aGpu)}
	END;

	Process_RemoveGpu(aProcess,aGpu) = 
	PRE	aProcess : Process &
		aGpu : Gpu &
		(aProcess |-> aGpu) : running
		
	THEN 
		running := running - {(aProcess |-> aGpu)}
	END;

	result <-- Gpu_GetSize(aGpu) = 
	PRE	aGpu : Gpu &
		aGpu : dom(Gpu_size)
		
	THEN 
		result := Gpu_size(aGpu)
	END;

	Gpu_SetSize(aGpu,aSize) = 
	PRE	aGpu : Gpu &
		aSize : INTEGER
		
	THEN 
		Gpu_size := ({aGpu} <<| Gpu_size)  \/ {(aGpu |-> aSize)}
	END


END
